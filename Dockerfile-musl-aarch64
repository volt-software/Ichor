FROM arm64v8/alpine:3.17

RUN apk update
RUN apk add gcc g++ build-base cmake git wget make nano sed linux-headers perl

# Run all downloads first to be able to use Docker's layers as cache and prevent excessive redownloads

WORKDIR /opt
RUN wget https://boostorg.jfrog.io/artifactory/main/release/1.81.0/source/boost_1_81_0.tar.bz2
RUN wget https://github.com/redis/hiredis/archive/refs/tags/v1.2.0.tar.gz
RUN wget https://www.openssl.org/source/openssl-3.0.11.tar.gz

ENV LDFLAGS="-static-libgcc -static-libstdc++ -static"
#Build openssl statically, alpine (and probably most distros) only provide shared libraries. Might be a security thing?
RUN tar xf openssl-3.0.11.tar.gz
WORKDIR /opt/openssl-3.0.11
RUN ./Configure --prefix=/usr --openssldir=/etc/ssl --libdir=lib no-shared
RUN make -j
RUN make -j install

WORKDIR /opt

#Build boost statically
RUN tar xf boost_1_81_0.tar.bz2

WORKDIR /opt/boost_1_81_0

RUN ./bootstrap.sh --prefix=/usr
RUN ./b2 variant=release link=static threading=multi cxxflags="-O2 -std=c++17 -static -fstack-protector-strong -fstack-clash-protection" linkflags="-static-libgcc -static-libstdc++ -static"
RUN ./b2 variant=release link=static threading=multi cxxflags="-O2 -std=c++17 -static -fstack-protector-strong -fstack-clash-protection" linkflags="-static-libgcc -static-libstdc++ -static" install

WORKDIR /opt

#Build latest hiredis containing sdevent support, not available yet in apt
RUN tar xf v1.2.0.tar.gz
RUN mkdir /opt/hiredis-1.2.0/build

WORKDIR /opt/hiredis-1.2.0/build
RUN cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DDISABLE_TESTS=1 -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_SSL=1 -DBUILD_SHARED_LIBS=0 ..
RUN make -j && make install
RUN mkdir -p /opt/ichor/build

WORKDIR /opt/ichor/build

ENTRYPOINT ["/bin/sh", "-c"]

CMD ["cd /opt/ichor/build && cmake -DCMAKE_BUILD_TYPE=Debug -DICHOR_USE_HIREDIS=1 -DICHOR_USE_BOOST_BEAST=1 -DICHOR_USE_SPDLOG=1 -DICHOR_MUSL=1 -DICHOR_AARCH64=1 -DICHOR_ARCH_OPTIMIZATION=MODERN_ARM_GENERIC /opt/ichor/src && make -j$(nproc)"]
